<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/11/12/hello-world/"/>
    <url>/2020/11/12/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux实用命令及注意事项</title>
    <link href="/2020/11/08/linux%E5%AE%9E%E7%94%A8%E5%91%BD%E4%BB%A4%E5%8F%8A%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <url>/2020/11/08/linux%E5%AE%9E%E7%94%A8%E5%91%BD%E4%BB%A4%E5%8F%8A%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
    
    <content type="html"><![CDATA[<h3 id="欢迎来到onlyroads，希望我的分享能够对大家有所帮助"><a href="#欢迎来到onlyroads，希望我的分享能够对大家有所帮助" class="headerlink" title="欢迎来到onlyroads，希望我的分享能够对大家有所帮助"></a>欢迎来到onlyroads，希望我的分享能够对大家有所帮助</h3><hr><h4 id="mv和cp"><a href="#mv和cp" class="headerlink" title="mv和cp"></a>mv和cp</h4><p>mv：移动<br>&nbsp;&nbsp;&nbsp;&nbsp;在相同目录下相当于重命名 eg：mv a b<br>&nbsp;&nbsp;&nbsp;&nbsp;在不同目录下为移动 eg:mv a /tmp/a  标准操作<br>&nbsp;&nbsp;&nbsp;&nbsp;在不同目录下为移动 eg:mv a /tmp/  非标准操作<br>cp：复制<br>&nbsp;&nbsp;&nbsp;&nbsp; cp -r a /tmp/a  &nbsp;标准操作<br>&nbsp;&nbsp;&nbsp;&nbsp; cp -r a /tmp &nbsp;&nbsp;&nbsp; 非标准操作<br>&nbsp;&nbsp;&nbsp;&nbsp; cp -r a /tmp/aa  复制的同时修改名称</p><h4 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h4><p>创建一个空文件<br>&nbsp;&nbsp;&nbsp;&nbsp; touch a.txt（推荐）<br>&nbsp;&nbsp;&nbsp;&nbsp; vim a.txt（麻烦）<br>&nbsp;&nbsp;&nbsp;&nbsp; 默认进入命令行模式<br>&nbsp;&nbsp;&nbsp;&nbsp; i键&nbsp;&nbsp;&nbsp;进入命令行模式–》编辑模式<br>&nbsp;&nbsp;&nbsp;&nbsp; esc键&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;从编辑模式–》命令行模式<br>&nbsp;&nbsp;&nbsp;&nbsp; shift+: 从命令行模式–》尾行模式$nbsp;&nbsp;wq报错退出, q!不保存退出<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cat /dev/null &gt; a.txt   清空文件内容为【推荐使用】<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>【坑！！】</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo “” &gt; a.txt 【慎用】执行该命令后a.txt的内容不为空，占一个字节<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;例如在如下场景：先清理内容，再判断是否为空，假如为空就继续执行本内容否则退出 </p><h4 id="gt-和-gt-gt"><a href="#gt-和-gt-gt" class="headerlink" title="&gt; 和 &gt;&gt;"></a>&gt; 和 &gt;&gt;</h4><p>&gt; 将文本内容 覆盖掉   【高危命令1】<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cp mysql.cnf  mysql.cnf20201107  养成备份的习惯，很重要<br>&gt;&gt; 将文本内容 追加</p><h4 id="查看文件内容"><a href="#查看文件内容" class="headerlink" title="查看文件内容"></a>查看文件内容</h4><p>cat 文件内容一下子全部显示  ctrl+z中断    【推荐】<br>    &nbsp;&nbsp;&nbsp;&nbsp;适合内容少的，内容多 不适合</p><p>more 文件内容一页页 往下翻，按空格往下翻，ctrl+b回退  q退出 【推荐】<br>        &nbsp;&nbsp;&nbsp;&nbsp;适合内容多的 </p><p>less 文件内容 按键盘的上下键  按行为单位  q退出<br>tail 实时查看文件内容<br>&nbsp;&nbsp;&nbsp;&nbsp;-f   假如文件被移除 然后重命名 就无法再监控到文件<br>&nbsp;&nbsp;&nbsp;&nbsp;-F   假如文件被移除 然后重命名 会不断的retry尝试 去监控文件，直到监控到位<br>&nbsp;&nbsp;&nbsp;&nbsp;想要查看文件内容倒数100行，且实时监控：tail -100f 1.log</p><p>grep 和 |<br>&nbsp;&nbsp;&nbsp;&nbsp;log日志内容特别多 如何快速定位到ERROR、关键词信息<br>&nbsp;&nbsp;&nbsp;&nbsp;cat CloudAgent.log | grep ERROR<br>&nbsp;&nbsp;&nbsp;&nbsp;cat CloudAgent.log | grep -A 10 ERROR 后10行<br>&nbsp;&nbsp;&nbsp;&nbsp;cat CloudAgent.log | grep -B 10 ERROR 前10行<br>&nbsp;&nbsp;&nbsp;&nbsp;cat CloudAgent.log | grep -C 10 ERROR 前后各10行 20行 【推荐】<br>&nbsp;&nbsp;&nbsp;&nbsp;如果ERROR 非常非常多   【推荐使用以下操作】<br>&nbsp;&nbsp;&nbsp;&nbsp;cat manyerrors.log | grep -C 20 ERROR &gt; error.log<br>&nbsp;&nbsp;&nbsp;&nbsp;more error.log</p><p>&nbsp;&nbsp;&nbsp;&nbsp;将日志文件 下载到window电脑，进行搜索 定位 分析  【推荐】<br>&nbsp;&nbsp;<strong>【坑！！】</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;假如CloudAgent.log 原文件很大，那么从生产下载到公司网络要走外网带宽大概10M，会影响公司服务<br>&nbsp;&nbsp;&nbsp;&nbsp;建议： 假如下载大文件，业务高峰或者工作日白天尽量不要做，或者进行【限速】（FTP可设置）</p><p>&nbsp;&nbsp;&nbsp;&nbsp;log4j日志组件<br>&nbsp;&nbsp;&nbsp;&nbsp;规则：每个log日志文件大小100M，保留10份<br>&nbsp;&nbsp;&nbsp;&nbsp;erp.log<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mv erp.log erp.log1<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;touch erp.log<br>&nbsp;&nbsp;&nbsp;&nbsp;erp.log 再由空的写满到100M<br>&nbsp;&nbsp;&nbsp;&nbsp;erp.log1 100m<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mv erp.log erp.log2<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;touch erp.log<br>&nbsp;&nbsp;&nbsp;&nbsp;以此类推……<br>&nbsp;&nbsp;&nbsp;&nbsp;erp.log 空的<br>&nbsp;&nbsp;&nbsp;&nbsp;erp.log1 100M<br>&nbsp;&nbsp;&nbsp;&nbsp;erp.log2 100M<br>&nbsp;&nbsp;&nbsp;&nbsp;…….</p><p>&nbsp;&nbsp;<strong>【坑！！】</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;对于大数据来说使用flume对日志文件采集<br>&nbsp;&nbsp;&nbsp;&nbsp;如果是log –&gt; flume –&gt; kafka<br>&nbsp;&nbsp;&nbsp;&nbsp;需要将设置为tail-F不能是-f：a1.sources.r1.command = tail -F /var/log/secure</p><h4 id="上传下载"><a href="#上传下载" class="headerlink" title="上传下载"></a>上传下载</h4><p>yum install -y lrzsz<br>sz xxx.log 下载 Linux–》window<br>rz 回车 上传</p><h4 id="alias：给命令取别名"><a href="#alias：给命令取别名" class="headerlink" title="alias：给命令取别名"></a>alias：给命令取别名</h4><p>生产上常用的命令或复杂的命令一串，可以使用别名来简化</p><pre><code class="hljs autoit">[root<span class="hljs-symbol">@hadoop100</span> ~]<span class="hljs-meta"># alias gpr=<span class="hljs-string">&#x27;cd /root/practive&#x27;</span></span>[root<span class="hljs-symbol">@hadoop100</span> ~]<span class="hljs-meta"># pwd</span>/root[root<span class="hljs-symbol">@hadoop100</span> ~]<span class="hljs-meta"># gpr</span>[root<span class="hljs-symbol">@hadoop100</span> practive]<span class="hljs-meta"># pwd</span>/root/practive</code></pre><p>查看取过别名的命令</p><pre><code class="hljs vhdl">[root@hadoop100 practive]# <span class="hljs-keyword">alias</span> <span class="hljs-keyword">alias</span> cp=<span class="hljs-symbol">&#x27;cp</span> -i&#x27;<span class="hljs-keyword">alias</span> egrep=<span class="hljs-symbol">&#x27;egrep</span> <span class="hljs-comment">--color=auto&#x27;</span><span class="hljs-keyword">alias</span> fgrep=<span class="hljs-symbol">&#x27;fgrep</span> <span class="hljs-comment">--color=auto&#x27;</span><span class="hljs-keyword">alias</span> gpr=<span class="hljs-symbol">&#x27;cd</span> /root/practive&#x27;<span class="hljs-keyword">alias</span> grep=<span class="hljs-symbol">&#x27;grep</span> <span class="hljs-comment">--color=auto&#x27;</span><span class="hljs-keyword">alias</span> l.=<span class="hljs-symbol">&#x27;ls</span> -d .* <span class="hljs-comment">--color=auto&#x27;</span><span class="hljs-keyword">alias</span> ll=<span class="hljs-symbol">&#x27;ls</span> -l <span class="hljs-comment">--color=auto&#x27;</span><span class="hljs-keyword">alias</span> ls=<span class="hljs-symbol">&#x27;ls</span> <span class="hljs-comment">--color=auto&#x27;</span><span class="hljs-keyword">alias</span> mv=<span class="hljs-symbol">&#x27;mv</span> -i&#x27;<span class="hljs-keyword">alias</span> rm=<span class="hljs-symbol">&#x27;rm</span> -i&#x27;</code></pre><p>现在新开一个会话</p><pre><code class="hljs autoit">[root<span class="hljs-symbol">@hadoop100</span> ~]<span class="hljs-meta"># gpr</span>bash: gpr: 未找到命令...</code></pre><p>原因是没有设置全局生效</p><h4 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h4><p>全局： /etc/profile 【一般权限不够，配置不了】<br>&nbsp;&nbsp;&nbsp;&nbsp;source /etc/profile，当前会话生效<br>&nbsp;&nbsp;&nbsp;&nbsp;已经开启的会话不会跟着自动生效，需要重新执行生效命令<br>&nbsp;&nbsp;&nbsp;&nbsp;新开的会话是自动的生效<br>个人： ~/.bash_profile、 ~/.bashrc  【推荐第二个】<br>&nbsp;&nbsp;<strong>【坑！！】</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;如下场景：<br>&nbsp;&nbsp;&nbsp;&nbsp;ssh远程执行B机器 java命令抛错， java command not found<br>&nbsp;&nbsp;&nbsp;&nbsp;直接登录B机器which java找的到<br>&nbsp;&nbsp;&nbsp;&nbsp;原因：配置环境变量文件在 .bash_profile 是不正确的，应该配置在 .bashrc文件里。</p><h4 id="创建用户和设置密码"><a href="#创建用户和设置密码" class="headerlink" title="创建用户和设置密码"></a>创建用户和设置密码</h4><pre><code class="hljs angelscript"><span class="hljs-string">[root@hadoop100 practive]</span># useradd lh<span class="hljs-string">[root@hadoop100 practive]</span># iduid=<span class="hljs-number">0</span>(root) gid=<span class="hljs-number">0</span>(root) 组=<span class="hljs-number">0</span>(root) 环境=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023<span class="hljs-string">[root@hadoop100 practive]</span># passwd lh更改用户 lh 的密码 。新的 密码：无效的密码： 密码未通过字典检查 - 过于简单化/系统化重新输入新的 密码：passwd：所有的身份验证令牌已经成功更新。</code></pre><h4 id="历史命令history"><a href="#历史命令history" class="headerlink" title="历史命令history"></a>历史命令history</h4><p>查看和清空历史命令</p><pre><code class="hljs autoit">[root<span class="hljs-symbol">@hadoop100</span> practive]<span class="hljs-meta"># history -c</span>[root<span class="hljs-symbol">@hadoop100</span> practive]<span class="hljs-meta"># history</span>    <span class="hljs-number">1</span>  history</code></pre><p>执行历史命令</p><pre><code class="hljs jboss-cli">[root@hadoop100 practive]<span class="hljs-comment"># history</span>    1  <span class="hljs-keyword">history</span>    2  <span class="hljs-keyword">pwd</span>    3  <span class="hljs-keyword">history</span>[root@hadoop100 practive]<span class="hljs-comment"># !2</span><span class="hljs-keyword">pwd</span><span class="hljs-string">/root/practive</span></code></pre><p>注：跳板机和直连服务器查不到删除历史命令的人<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;堡垒机可以查找到</p>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>相应的坑</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux实用命令及注意事项2</title>
    <link href="/2020/11/08/linux%E5%AE%9E%E7%94%A8%E5%91%BD%E4%BB%A4%E5%8F%8A%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B92/"/>
    <url>/2020/11/08/linux%E5%AE%9E%E7%94%A8%E5%91%BD%E4%BB%A4%E5%8F%8A%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B92/</url>
    
    <content type="html"><![CDATA[<h2 id="欢迎来到onlyroads，希望以下内容能对你有所帮助！"><a href="#欢迎来到onlyroads，希望以下内容能对你有所帮助！" class="headerlink" title=" 欢迎来到onlyroads，希望以下内容能对你有所帮助！"></a> 欢迎来到onlyroads，希望以下内容能对你有所帮助！</h2><h4 id="rm-rf【高危命令】"><a href="#rm-rf【高危命令】" class="headerlink" title="rm -rf【高危命令】"></a>rm -rf【高危命令】</h4><p>rm -rf / 直接删除根目录的所有内容，且不提示<br>rm xxx.log 会有提示<br>rm -r ydir 删除目录，且有提示，-f不提示</p><p>业务逻辑判断 赋值的 LOG_PATH=/xxx/yyy<br>如果漏了一个变量没有赋值，那么脚本中rm -rf ${LOG}/* 就等于是rm -rf /*  很危险<br>如何避免：<br>set -u参数 写在脚本的第二行，第一行是#!/bin/bash<br>如果变量在未复制的情况在会抛错</p><h4 id="用户与用户组"><a href="#用户与用户组" class="headerlink" title="用户与用户组"></a>用户与用户组</h4><h5 id="查看相关常用命令"><a href="#查看相关常用命令" class="headerlink" title="查看相关常用命令"></a>查看相关常用命令</h5><pre><code class="hljs angelscript"><span class="hljs-string">[root@hadoop100 ~]</span># ll /usr/sbin/user*-rwxr-x---. <span class="hljs-number">1</span> root root <span class="hljs-number">118192</span> <span class="hljs-number">11</span>月  <span class="hljs-number">6</span> <span class="hljs-number">2016</span> /usr/sbin/useradd-rwxr-x---. <span class="hljs-number">1</span> root root  <span class="hljs-number">80360</span> <span class="hljs-number">11</span>月  <span class="hljs-number">6</span> <span class="hljs-number">2016</span> /usr/sbin/userdel-rws--x--x. <span class="hljs-number">1</span> root root  <span class="hljs-number">40312</span> <span class="hljs-number">6</span>月  <span class="hljs-number">10</span> <span class="hljs-number">2014</span> /usr/sbin/userhelper-rwxr-x---. <span class="hljs-number">1</span> root root <span class="hljs-number">113840</span> <span class="hljs-number">11</span>月  <span class="hljs-number">6</span> <span class="hljs-number">2016</span> /usr/sbin/usermod-rwsr-xr-x. <span class="hljs-number">1</span> root root  <span class="hljs-number">11288</span> <span class="hljs-number">4</span>月  <span class="hljs-number">11</span> <span class="hljs-number">2018</span> /usr/sbin/usernetctl<span class="hljs-string">[root@hadoop100 ~]</span># ll /usr/sbin/group*-rwxr-x---. <span class="hljs-number">1</span> root root <span class="hljs-number">65480</span> <span class="hljs-number">11</span>月  <span class="hljs-number">6</span> <span class="hljs-number">2016</span> /usr/sbin/groupadd-rwxr-x---. <span class="hljs-number">1</span> root root <span class="hljs-number">57016</span> <span class="hljs-number">11</span>月  <span class="hljs-number">6</span> <span class="hljs-number">2016</span> /usr/sbin/groupdel-rwxr-x---. <span class="hljs-number">1</span> root root <span class="hljs-number">57064</span> <span class="hljs-number">11</span>月  <span class="hljs-number">6</span> <span class="hljs-number">2016</span> /usr/sbin/groupmems-rwxr-x---. <span class="hljs-number">1</span> root root <span class="hljs-number">76424</span> <span class="hljs-number">11</span>月  <span class="hljs-number">6</span> <span class="hljs-number">2016</span> /usr/sbin/groupmod</code></pre><h5 id="创建用户的同时默认也会创建一个同名的组"><a href="#创建用户的同时默认也会创建一个同名的组" class="headerlink" title="创建用户的同时默认也会创建一个同名的组"></a>创建用户的同时默认也会创建一个同名的组</h5><pre><code class="hljs ruby">[root@hadoop100 ~]<span class="hljs-comment"># useradd yy</span>[root@hadoop100 ~]<span class="hljs-comment"># id</span>uid=<span class="hljs-number">0</span>(root) gid=<span class="hljs-number">0</span>(root) 组=<span class="hljs-number">0</span>(root) 环境=<span class="hljs-symbol">unconfined_u:</span><span class="hljs-symbol">unconfined_r:</span><span class="hljs-symbol">unconfined_t:</span>s<span class="hljs-number">0</span>-<span class="hljs-symbol">s0:</span>c<span class="hljs-number">0</span>.c1023[root@hadoop100 ~]<span class="hljs-comment"># cat /etc/passwd 查看用户信息</span> <span class="hljs-symbol">yy:</span><span class="hljs-symbol">x:</span><span class="hljs-number">1006</span><span class="hljs-symbol">:</span><span class="hljs-number">1006</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/home/yy</span><span class="hljs-symbol">:/bin/bash</span>[root@hadoop100 ~]<span class="hljs-comment"># cat /etc/group 查看组信息</span><span class="hljs-symbol">yy:</span><span class="hljs-symbol">x:</span><span class="hljs-number">1006</span><span class="hljs-symbol">:</span></code></pre><h5 id="切换与删除用户"><a href="#切换与删除用户" class="headerlink" title="切换与删除用户"></a>切换与删除用户</h5><p>su - yy 切换后会回到yy用户的家目录<br>su yy 切换后还是在当前目录</p><pre><code class="hljs awk">[root@hadoop100 ~]<span class="hljs-comment"># su - yy</span>[yy@hadoop100 ~]$ pwd<span class="hljs-regexp">/home/yy</span>[yy@hadoop100 ~]$ <span class="hljs-keyword">exit</span>登出[root@hadoop100 ~]<span class="hljs-comment"># su yy</span>[yy@hadoop100 root]$ pwd/root</code></pre><p>userdel 删除用户，如果该用户的用户组没有其他用户则一起删除<br>但仅仅删除/etc/passwd中关于用户的内容，并不会删除家目录中的内容</p><pre><code class="hljs angelscript"><span class="hljs-string">[root@hadoop100 ~]</span># userdel yy<span class="hljs-string">[root@hadoop100 ~]</span># ls -l /home/drwx------.  <span class="hljs-number">5</span>      <span class="hljs-number">1006</span>    <span class="hljs-number">1006</span>  <span class="hljs-number">128</span> <span class="hljs-number">11</span>月  <span class="hljs-number">9</span> <span class="hljs-number">09</span>:<span class="hljs-number">01</span> yy</code></pre><h5 id="样式丢失"><a href="#样式丢失" class="headerlink" title="样式丢失"></a>样式丢失</h5><pre><code class="hljs angelscript"><span class="hljs-string">[root@hadoop100 home]</span># useradd xy<span class="hljs-string">[root@hadoop100 home]</span># rm -rf /home/xy/.bash*一个用户默认的家目录是在/home，可以通过usermod -d 更改<span class="hljs-string">[root@hadoop100 home]</span># usermod -d /tmp xy<span class="hljs-string">[root@hadoop100 home]</span># su - xy上一次登录：一 <span class="hljs-number">11</span>月  <span class="hljs-number">9</span> <span class="hljs-number">09</span>:<span class="hljs-number">28</span>:<span class="hljs-number">35</span> CST <span class="hljs-number">2020</span>pts/<span class="hljs-number">0</span> 上-bash<span class="hljs-number">-4.2</span>$</code></pre><p>我们发现 [root@hadoop100 home]这种样式丢失了，变成了-bash-4.2$ 这种样式<br>原因就是当前用户的所属家目录的个人环境变量文件不存在<br>在/ec/skel/文件夹中有个人环境变量的文件</p><pre><code class="hljs angelscript"><span class="hljs-string">[root@hadoop100 ~]</span># ll -a /etc/skel/总用量 <span class="hljs-number">24</span>drwxr-xr-x.   <span class="hljs-number">3</span> root root   <span class="hljs-number">78</span> <span class="hljs-number">4</span>月  <span class="hljs-number">11</span> <span class="hljs-number">2018</span> .drwxr-xr-x. <span class="hljs-number">141</span> root root <span class="hljs-number">8192</span> <span class="hljs-number">11</span>月  <span class="hljs-number">9</span> <span class="hljs-number">10</span>:<span class="hljs-number">59</span> ..-rw-r--r--.   <span class="hljs-number">1</span> root root   <span class="hljs-number">18</span> <span class="hljs-number">4</span>月  <span class="hljs-number">11</span> <span class="hljs-number">2018</span> .bash_logout-rw-r--r--.   <span class="hljs-number">1</span> root root  <span class="hljs-number">193</span> <span class="hljs-number">4</span>月  <span class="hljs-number">11</span> <span class="hljs-number">2018</span> .bash_profile-rw-r--r--.   <span class="hljs-number">1</span> root root  <span class="hljs-number">231</span> <span class="hljs-number">4</span>月  <span class="hljs-number">11</span> <span class="hljs-number">2018</span> .bashrcdrwxr-xr-x.   <span class="hljs-number">4</span> root root   <span class="hljs-number">39</span> <span class="hljs-number">8</span>月  <span class="hljs-number">10</span> <span class="hljs-number">22</span>:<span class="hljs-number">48</span> .mozilla</code></pre><p>我们只需复制到用户家目录中即可</p><pre><code class="hljs awk">cp <span class="hljs-regexp">/etc/</span>skel<span class="hljs-regexp">/.* /</span>home<span class="hljs-regexp">/xx/</span>[root@hadoop100 home]<span class="hljs-comment"># su xy</span>[xy@hadoop100 home]$</code></pre><p>这样样式就恢复了</p><h5 id="添加用户到新的用户组"><a href="#添加用户到新的用户组" class="headerlink" title="添加用户到新的用户组"></a>添加用户到新的用户组</h5><p>一个用户可以存在于多个组<br>以下代码就是将 xy添加到 另一个dw组中，并且让主组gid=dw，其他组为xy<br>这样，xy 就同时属于 dw组和xy组</p><pre><code class="hljs ini"><span class="hljs-section">[root@hadoop100 home]</span><span class="hljs-comment"># groupadd dw</span><span class="hljs-section">[root@hadoop100 home]</span><span class="hljs-comment"># usermod -g dw xy</span><span class="hljs-section">[root@hadoop100 home]</span><span class="hljs-comment"># id xy</span><span class="hljs-attr">uid</span>=<span class="hljs-number">1007</span>(xy) gid=<span class="hljs-number">1008</span>(dw) 组=<span class="hljs-number">1008</span>(dw)<span class="hljs-section">[root@hadoop100 home]</span><span class="hljs-comment"># usermod -a -G xy xy</span><span class="hljs-section">[root@hadoop100 home]</span><span class="hljs-comment"># id xy</span><span class="hljs-attr">uid</span>=<span class="hljs-number">1007</span>(xy) gid=<span class="hljs-number">1008</span>(dw) 组=<span class="hljs-number">1008</span>(dw),<span class="hljs-number">1007</span>(xy)<span class="hljs-section">[root@hadoop100 home]</span><span class="hljs-comment"># </span></code></pre><h5 id="passwd文件"><a href="#passwd文件" class="headerlink" title="passwd文件"></a>passwd文件</h5><p>查看 /etc/passwd文件会发现结尾有两种 /bin/bash，/sbin/nologin</p><pre><code class="hljs ruby">[root@hadoop100 ~]<span class="hljs-comment"># cat /etc/passwd</span><span class="hljs-symbol">postfix:</span><span class="hljs-symbol">x:</span><span class="hljs-number">89</span><span class="hljs-symbol">:</span><span class="hljs-number">89</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/var/spool/postfix</span><span class="hljs-symbol">:/sbin/nologin</span><span class="hljs-symbol">xy:</span><span class="hljs-symbol">x:</span><span class="hljs-number">1007</span><span class="hljs-symbol">:</span><span class="hljs-number">1008</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/home/xy</span><span class="hljs-symbol">:/bin/bash</span></code></pre><p>进入 /etc/passwd 文件将xy用户的/bin/bash改为 /sbin/nologin</p><pre><code class="hljs ruby"><span class="hljs-symbol">xy:</span><span class="hljs-symbol">x:</span><span class="hljs-number">1007</span><span class="hljs-symbol">:</span><span class="hljs-number">1008</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/home/xy</span><span class="hljs-symbol">:/sbin/nologin</span></code></pre><p>然后切换到 xy 用户，发现无法切换</p><pre><code class="hljs coffeescript">[root@hadoop100 ~]<span class="hljs-comment"># su xy</span>This account <span class="hljs-keyword">is</span> currently <span class="hljs-keyword">not</span> available.</code></pre><p>我们再将xy用户的 /sbin/nologin 改为 /bin/false<br>然后进行切换</p><pre><code class="hljs less"><span class="hljs-attribute">xy</span>:<span class="hljs-attribute">x</span>:<span class="hljs-number">1007</span>:<span class="hljs-number">1008</span>::/home/<span class="hljs-attribute">xy</span>:/bin/false[root<span class="hljs-variable">@hadoop100</span> ~]# su - xy上一次登录：一 <span class="hljs-number">11</span>月  <span class="hljs-number">9</span> <span class="hljs-number">11</span>:<span class="hljs-number">33</span>:<span class="hljs-number">15</span> CST <span class="hljs-number">2020pt</span>s/<span class="hljs-number">0</span> 上[root<span class="hljs-variable">@hadoop100</span> ~]#</code></pre><p>这时候我们发现登不进去，但不会出现 This account is currently not available.</p><p>CDH集群部署，hdfs hbase等等用户，su - hdfs切不过去的，原因就在  /bin/false<br>jps命令查看都是 不可用的<br>su - hdfs 之前 将/bin/false 改为 /bin/bash 即可切换成功。</p><h5 id="sudo命令"><a href="#sudo命令" class="headerlink" title="sudo命令"></a>sudo命令</h5><p>su xx 切换用户<br>su - xx 切换用户 进入家目录 且执行该用户环境变量文件 .bashrc<br>sudo: 普通用户临时使用root的最大权限</p><pre><code class="hljs angelscript"><span class="hljs-string">[root@hadoop100 ~]</span># su - xy上一次登录：一 <span class="hljs-number">11</span>月  <span class="hljs-number">9</span> <span class="hljs-number">11</span>:<span class="hljs-number">33</span>:<span class="hljs-number">22</span> CST <span class="hljs-number">2020</span>pts/<span class="hljs-number">0</span> 上<span class="hljs-string">[xy@hadoop100 ~]</span>$ cat /root/a.txtcat: /root/a.txt: 权限不够</code></pre><p>在 /etc/sudoers文件中添加<br>xy      ALL=(ALL)       ALL</p><pre><code class="hljs gams">vim /etc/sudoersroot    <span class="hljs-keyword">ALL</span>=(<span class="hljs-keyword">ALL</span>)       <span class="hljs-keyword">ALL</span>xy      <span class="hljs-keyword">ALL</span>=(<span class="hljs-keyword">ALL</span>)       <span class="hljs-keyword">ALL</span>[xy@hadoop100 ~]<span class="hljs-symbol">$</span> sudo cat /root/a.txtabc</code></pre><h4 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h4><pre><code class="hljs angelscript">drwxr-xr-x. <span class="hljs-number">2</span> root root   <span class="hljs-number">6</span> <span class="hljs-number">11</span>月  <span class="hljs-number">8</span> <span class="hljs-number">21</span>:<span class="hljs-number">58</span> a-rw-r--r--. <span class="hljs-number">1</span> root root <span class="hljs-number">136</span> <span class="hljs-number">11</span>月  <span class="hljs-number">7</span> <span class="hljs-number">23</span>:<span class="hljs-number">33</span> bb.txt-rw-r--r--. <span class="hljs-number">1</span> root root   <span class="hljs-number">9</span> <span class="hljs-number">11</span>月  <span class="hljs-number">7</span> <span class="hljs-number">23</span>:<span class="hljs-number">36</span> b.txt</code></pre><p>d rwx r-x r-x<br>第一个字符 d 代表文件夹 - 代表文件<br>rwx r-x r-x<br>三组的三个字母 分别是 读r 4、写w 2、 执x 1、-没有任何权限 0<br>第一组：rwx 文件或者文件夹的所属用户，有读写执行权限，<br>第二组：r-x 文件或者文件夹所属用户组的成员，只有读执行的权限<br>第三组：r-x 其他用户组的成员对这个文件或文件夹的权限，只有读和执行</p><p>权限的数字表示<br>777  rwxrwxrwx<br>755  rwxr-xr-x<br>640  rw-r—–<br>600  rw——-</p><p>权限命令<br>chmod -R 777 文件或文件夹，更改文件的权限<br>chown -R 用户:用户组 文件或文件夹，更改文件的用户和所属组</p><p>举一个小例子，分析一下</p><pre><code class="hljs angelscript"><span class="hljs-string">[xy@hadoop100 ~]</span>$ ll总用量 <span class="hljs-number">4</span>-rw-r--r--. <span class="hljs-number">1</span> xy dw <span class="hljs-number">2</span> <span class="hljs-number">11</span>月  <span class="hljs-number">9</span> <span class="hljs-number">11</span>:<span class="hljs-number">57</span> a.txt<span class="hljs-string">[xy@hadoop100 ~]</span>$ chmod <span class="hljs-number">244</span> a.txt<span class="hljs-string">[xy@hadoop100 ~]</span>$ ll总用量 <span class="hljs-number">4</span>--w-r--r--. <span class="hljs-number">1</span> xy dw <span class="hljs-number">2</span> <span class="hljs-number">11</span>月  <span class="hljs-number">9</span> <span class="hljs-number">11</span>:<span class="hljs-number">57</span> a.txt<span class="hljs-string">[xy@hadoop100 ~]</span>$ cat a.txt cat: a.txt: 权限不够</code></pre><p>为什么会出现权限不够？<br>因为我用chmod 244 命令将a.txt文件的所有者的权限改为–w<br>即对于a.txt文件的所有者来说只能写，不能读<br>如果想要查看，给文件所有者添加写权限几个</p><pre><code class="hljs angelscript"><span class="hljs-string">[xy@hadoop100 ~]</span>$ chmod <span class="hljs-number">644</span> a.txt <span class="hljs-string">[xy@hadoop100 ~]</span>$ ll总用量 <span class="hljs-number">4</span>-rw-r--r--. <span class="hljs-number">1</span> xy dw <span class="hljs-number">2</span> <span class="hljs-number">11</span>月  <span class="hljs-number">9</span> <span class="hljs-number">11</span>:<span class="hljs-number">57</span> a.txt<span class="hljs-string">[xy@hadoop100 ~]</span>$ cat a.txt a</code></pre><p>以后遇到权限问题，先要清楚是文件的所有者、所属组还是其他组的用户访问失败<br>然后再对相应用户添加相应的权限即可</p><h4 id="大小"><a href="#大小" class="headerlink" title="大小"></a>大小</h4><p>文件大小 ll -h<br>文件夹大小 du -sh<br>查看/home文件夹中的大小</p><pre><code class="hljs angelscript"><span class="hljs-string">[root@hadoop100 ~]</span># du -sh /home<span class="hljs-number">221</span>M/home</code></pre><h4 id="搜索-find"><a href="#搜索-find" class="headerlink" title="搜索 find"></a>搜索 find</h4><p>find file -name ‘xxx’</p><pre><code class="hljs gradle">[root@hadoop100 atguigu]# <span class="hljs-keyword">find</span> <span class="hljs-regexp">/opt/m</span>odule/ -name <span class="hljs-string">&#x27;*hadoop*&#x27;</span><span class="hljs-regexp">/opt/m</span>odule/hadoop-<span class="hljs-number">2.7</span>.<span class="hljs-number">2</span><span class="hljs-regexp">/opt/m</span>odule<span class="hljs-regexp">/hadoop-2.7.2/</span>etc/hadoop</code></pre><p>history 去看看常规操作<br>find 命令搜索<br>ps -ef 查看进程</p><h3 id="vi-编辑"><a href="#vi-编辑" class="headerlink" title="vi 编辑"></a>vi 编辑</h3><p>良好习惯：<br>vi 编辑配置文件<br>先 cp conf conf20201109<br>vi 修改完并wq保存后，如果发现改错文件了，也不怕，有备份</p><p>有时vim进入文件后会出现以下内容：</p><pre><code class="hljs vim">E325: 注意发现交换文件 <span class="hljs-string">&quot;.b.txt.swp&quot;</span>            所有者: root    日期: Mon Nov  <span class="hljs-number">9</span> <span class="hljs-number">12</span>:<span class="hljs-number">11</span>:<span class="hljs-number">24</span> <span class="hljs-number">2020</span>            文件名: ~root/<span class="hljs-keyword">b</span>.txt            修改过: 否            用户名: root      主机名: hadoop100           进程 ID: <span class="hljs-number">3551</span> (仍在运行)正在打开文件 <span class="hljs-string">&quot;b.txt&quot;</span>(<span class="hljs-number">1</span>) Another program may <span class="hljs-keyword">be</span> editing the same <span class="hljs-keyword">file</span>.  If this <span class="hljs-keyword">is</span> the case,    <span class="hljs-keyword">be</span> careful not <span class="hljs-keyword">to</span> end <span class="hljs-keyword">up</span> with two different instances of the same    <span class="hljs-keyword">file</span> when making <span class="hljs-keyword">changes</span>.  Quit, <span class="hljs-built_in">or</span> <span class="hljs-keyword">continue</span> with caution.(<span class="hljs-number">2</span>) An <span class="hljs-keyword">edit</span> session <span class="hljs-keyword">for</span> this <span class="hljs-keyword">file</span> crashed.    如果是这样，请用 <span class="hljs-string">&quot;:recover&quot;</span> 或 <span class="hljs-string">&quot;vim -r b.txt&quot;</span>    恢复修改的内容 (请见 <span class="hljs-string">&quot;:help recovery&quot;</span>)。    如果你已经进行了恢复，请删除交换文件 <span class="hljs-string">&quot;.b.txt.swp&quot;</span>    以避免再看到此消息。交换文件 <span class="hljs-string">&quot;.b.txt.swp&quot;</span> 已存在！</code></pre><p>进入提示是 swap文件，只需ll -a查看，进行删除即可</p><pre><code class="hljs css"><span class="hljs-selector-attr">[root@hadoop100 ~]</span># <span class="hljs-selector-tag">ll</span> <span class="hljs-selector-tag">-a</span><span class="hljs-selector-tag">-rw-------</span>.  1 <span class="hljs-selector-tag">root</span> <span class="hljs-selector-tag">root</span>  4096 11月  9 12<span class="hljs-selector-pseudo">:11</span> <span class="hljs-selector-class">.b</span><span class="hljs-selector-class">.txt</span><span class="hljs-selector-class">.swp</span><span class="hljs-selector-attr">[root@hadoop100 ~]</span># <span class="hljs-selector-tag">rm</span> <span class="hljs-selector-tag">-rf</span> <span class="hljs-selector-class">.b</span><span class="hljs-selector-class">.txt</span><span class="hljs-selector-class">.swp</span></code></pre><p><strong>【粘贴的坑】</strong><br>必须按 i 进入编辑模式，否则第一行内容丢失，不完成【生产巨坑】</p><p>在命令行模式，常用的快捷方式<br>dd 删除当前行<br>dG 删除当前行及以下所有行<br>ndd 删除当前行及以下n-1行</p><p>gg 跳转到第一行的第一个字母<br>G 跳转到最后一行的第一个字母<br>shift+$ 行尾<br>如何通过vi命令清空文件内容：gg  dG</p><p>显示行号：set nu<br>不显示行号：set nonu</p>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>相应的坑</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
